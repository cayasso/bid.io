{
  "name": "bid.io-parser",
  "version": "0.1.0",
  "description": "bid.io protocol parser",
  "author": {
    "name": "Jonathan Brumley",
    "email": "cayasso@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "git@bitbucket.org:18techs/bid.io-parser.git"
  },
  "dependencies": {
    "debug": "*"
  },
  "devDependencies": {
    "mocha": "*",
    "expect.js": "*"
  },
  "readme": "\n# bid.io-protocol\n\n  This repository contains the protocol specification and JavaScript\n  parser for the Bid.IO protocol.\n\n## Protocol version\n\n  **Current protocol revision:** `1`.\n\n## Parser API\n\n### Parser#encode(Object:packet):String\n\n  Encodes a `Packet` object as a string.\n\n### Parser#decode(String:packet):Packet\n\n  Returns a `Packet` object for the given string. If a parsing error\n  occurs the returned packet is an error object.\n\n### Parser#types\n\n  Array of packet type keys.\n\n### Packet\n\n  Each packet is represented as a vanilla `Object` with a\n  `type` key that can be one of the following:\n\n  - `Packet#JOIN` (`0`)\n  - `Packet#LEAVE` (`1`)\n  - `Packet#FETCH` (`2`)\n  - `Packet#LOCK` (`3`)\n  - `Packet#UNLOCK` (`4`)\n  - `Packet#COMPLETE` (`5`)\n  - `Packet#ERROR` (`6`)\n\n  All packts contains the fallowing properties:\n\n  - `type` (`Number`) request `type`. \n  - `data` (`Object`) bid `data`.\n  - `id` (`Number`) bid `id`.\n\n## Running Tests\n\n  To run the test suite just do:\n\n  `$ make test`\n",
  "readmeFilename": "Readme.md",
  "_id": "bid.io-parser@0.1.0",
  "dist": {
    "shasum": "b142bc1536d71da8318d6b02b1d29eea3ed37136"
  },
  "_resolved": "git@bitbucket.org:18techs/bid.io-parser.git#9bbecc6a9cab750a5e96fdf21ee3085c64ae8028",
  "_from": "bid.io-parser@git+ssh://git@bitbucket.org:18techs/bid.io-parser.git"
}
